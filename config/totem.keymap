//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

 / { combos { compatible = "zmk,combos"; backspace { bindings = <&kp BACKSPACE>; key-positions = <16 17>; }; delete { bindings = <&kp DELETE>; key-positions = <28 27>; }; alttab { bindings = <&kp LA(TAB)>; key-positions = <2 12>; }; ctrlshift { bindings = <&kp LC(LEFT_SHIFT)>; key-positions = <10 21>; }; btcon { bindings = <&mo 6>; key-positions = <4 20>; }; layer2 { bindings = <&mo 2>; key-positions = <32 33>; }; layer5 { bindings = <&mo 5>; key-positions = <34 33>; }; }; macros { aleft: aleft { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LA(H) &kp G &kp A &kp L>; label = "ALEFT"; }; aright: aright { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LA(H) &kp G &kp A &kp R>; label = "ARIGHT"; }; atop: atop { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LA(H) &kp G &kp A &kp T>; label = "ATOP"; }; acenter: amiddle { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LA(H) &kp G &kp A &kp C>; label = "AMIDDLE"; }; abottom: abottom { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LA(H) &kp G &kp A &kp B>; label = "ABOTTOM"; }; trsimage: trsimage { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LA(J) &kp P &kp I &kp S>; label = "TRSIMAGE"; }; amid: amid { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LA(H) &kp G &kp A &kp M>; label = "AMID"; }; Horizontal: Horizontal { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LEFT_ALT &kp H &kp G &kp A &kp H>; label = "HORIZONTAL"; }; Vertical: Vertical { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LEFT_ALT &kp H &kp G &kp A &kp V>; label = "VERTICAL"; }; PW: PW { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&none &kp LS(S) &kp C &kp H &kp O &kp O &kp N1 &kp N4 &kp T &kp H &kp E &kp W &kp EXCL &kp N>; label = "PW"; }; Thx: Thx { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&none &kp LS(T) &kp H &kp A &kp N &kp K &kp SPACE &kp Y &kp O &kp U &kp COMMA &kp RET &kp LS(A) &kp N &kp D &kp R &kp E &kp W>; label = "THX"; }; LineDel: LineDel { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp HOME &kp RS(END)>; label = "LINEDEL"; }; BottomofCol: BottomofCol { compatible = "zmk,behavior-macro"; #binding-cells = <0>; bindings = <&kp LC(END) &kp HOME>; label = "BOTTOMOFCOL"; }; }; keymap { compatible = "zmk,keymap"; base { bindings = < &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &kp LCTRL &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp ESC &kp LEFT_ALT &mo 1 &kp SPACE &mt LCTRL ENTER &mo 2 &sk RIGHT_SHIFT >; }; nav_num { bindings = < &none &none &kp TAB &kp F5 &kp LA(F4) &none &kp PG_UP &kp UP_ARROW &kp PG_DN &none &kp LEFT_WIN &sk LEFT_ALT &sk LEFT_CONTROL &sk LEFT_SHIFT &kp F2 &kp K_APP &kp LEFT &kp DOWN &kp RIGHT_ARROW &none &kp LEFT_WIN &none &kp LC(X) &kp LC(C) &kp LC(V) &none &LineDel &kp HOME &none &kp END &BottomofCol &kp ESC &kp LEFT_WIN &trans &kp SPACE &kp ENTER &sl 3 &sk RIGHT_SHIFT >; }; sym_func { bindings = < &kp ESC &kp N7 &kp N8 &kp N9 &none &kp F1 &kp SQT &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp SLASH &kp LSHFT &kp N4 &kp N5 &kp N6 &kp LALT &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH &kp LEFT_WIN &kp LCTRL &kp N1 &kp N2 &kp N3 &kp N0 &kp UNDERSCORE &kp PLUS &kp LEFT_BRACE &kp RIGHT_BRACE &kp PIPE &kp TILDE &kp LALT &trans &trans &trans &trans &sk LEFT_SHIFT >; }; device { bindings = < &trans &kp F7 &kp F8 &kp F9 &trans &trans &kp F16 &kp F17 &kp F18 &trans &kp LCTRL &kp F4 &kp F5 &kp F6 &trans &trans &kp F13 &kp F14 &kp F15 &trans &trans &kp LSHFT &trans &kp F2 &kp F3 &trans &trans &kp F10 &kp F11 &kp F12 &trans &trans &kp LALT &trans &trans &trans &trans &trans >; }; extra { bindings = < &trans &kp F7 &kp F8 &kp F9 &trans &trans &kp F16 &kp F17 &kp F18 &trans &kp LCTRL &kp F4 &kp F5 &kp F6 &trans &trans &kp F13 &kp F14 &kp F15 &trans &trans &kp LSHFT &trans &kp F2 &kp F3 &trans &trans &kp F10 &kp F11 &kp F12 &trans &trans &kp LALT &trans &trans &trans &trans &trans >; }; extra2 { bindings = < &trsimage &aleft &kp UP_ARROW &aright &trans &trans &trans &trans &trans &trans &kp LEFT_SHIFT &kp LEFT &kp DOWN_ARROW &kp RIGHT &kp K_APP &trans &trans &trans &trans &trans &Horizontal &Vertical &atop &acenter &amid &abottom &trans &trans &trans &trans &trans &trans &kp LALT &trans &trans &trans &trans &trans >; }; extra3 { bindings = < &none &none &none &none &none &none &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none &none &none &none &none &none &none &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE &none &none &none &none &none &none &PW &none &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_CLR_ALL &none &none &kp LALT &none &none &none >; }; }; conditional_layers { compatible = "zmk,conditional-layers"; }; };
